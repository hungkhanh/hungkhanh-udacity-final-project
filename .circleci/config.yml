version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3.1

commands:
  install_hadolint:
    description: "Install hadolint v2.12.0"
    steps:
      - run:
          command: |
            wget -O ~/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
            sudo chmod +x ~/hadolint

jobs:
  lint:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [dependencies]
      - run:
          name: install hadolint
          command: |
            wget -O ~/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
            sudo chmod +x ~/hadolint
      - run:
          name: install node_modules
          command: |
            npm install
      - run:
          name: Lint Dockerfile
          command: |
            ~/hadolint Dockerfile
      - save_cache:
          paths: [node_modules]
          key: dependencies    

  set-environment-variables:
    context: udacity
      steps:
        - run:
            name: Set Environment Variables
            command: |
              export AWS_ECR_URL="${AWS_ECR_REGISTRY_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
              echo "AWS_ECR_URL=${AWS_ECR_URL}" >> $BASH_ENV

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: "tests/nginx-deployment/deployment.yaml"
          resource-name: "deployment/nginx-deployment"
          get-rollout-status: true
          show-kubectl-command: true
    

workflows:
  default:
    jobs:
      - lint
      - aws-ecr/build-and-push-image:
          name: 'build-and-push-image'
          context: udacity
          create-repo: true
          dockerfile: Dockerfile
          path: .
          repo: circleci-ecr
          tag: "udacity-project-${CIRCLE_WORKFLOW_ID:0:7}"
          requires:
            - lint
      - set-environment-variables
      - aws-eks/create-cluster:
          cluster-name: eks-orb-circle-ci
          aws-region: $AWS_DEFAULT_REGION
          requires: 
            - build-and-push-image      
            - set-environment-variables

