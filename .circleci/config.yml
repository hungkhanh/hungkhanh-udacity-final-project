version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3.1

commands:
  install_hadolint:
    description: "Install hadolint v2.12.0"
    steps:
      - run:
          command: |
            wget -O ~/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
            sudo chmod +x ~/hadolint

jobs:
  lint:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [dependencies]
      - run:
          name: install hadolint
          command: |
            wget -O ~/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
            sudo chmod +x ~/hadolint
      - run:
          name: install node_modules
          command: |
            npm install
      - run:
          name: Lint Dockerfile
          command: |
            ~/hadolint Dockerfile
      - save_cache:
          paths: [node_modules]
          key: dependencies    

  deploy-application:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      aws-region:
        description: |
          AWS region
        type: string
        default: "us-east-1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region >>
          install-kubectl: true      
      - kubernetes/create-or-update-resource:
          resource-file-path: kubernetes/deployment.yml
          resource-name: deployment/hungpham-application
          get-rollout-status: true
          show-kubectl-command: true
      - run:
          name: Get cluster
          command: |
            kubectl get nodes
            kubectl get pod -o wide
            kubectl get deployment
            kubectl get services

workflows:
  default:
    jobs:
      - lint
      - aws-ecr/build-and-push-image:
          name: 'build-and-push-image'
          context: udacity
          create-repo: true
          dockerfile: Dockerfile
          path: .
          repo: circleci-ecr
          tag: "udacity-project"
          requires:
            - lint
      - aws-eks/create-cluster:
          cluster-name: eks-stack
          aws-region: $AWS_DEFAULT_REGION
          requires: 
            - build-and-push-image
      - deploy-application:
          cluster-name: eks-stack
          aws-region: $AWS_DEFAULT_REGION
          filters:
            branches:
              only:
                - master
          requires:
            - aws-eks/create-cluster
      # - aws-eks/delete-cluster:
      #     cluster-name: eks-stack
      #     aws-region: $AWS_DEFAULT_REGION
      #     when: on_fail
      #     requires:
      #       - deploy-application